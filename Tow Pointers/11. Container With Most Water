/**
 * @param {number[]} height
 * @return {number}
 */
 /*
    가장 바깥사이드를 시작으로 안쪽으로 파고들며 가장 큰 최적의 물 용량을 찾는다.
    안쪽으로 파고들수록 가로의 길이는 줄어들며, 세로의 길이는 양쪽사이드 중 작은 것을 기준으로 용량이 구해진다.
    따라서 양쪽 사이드중 작은 것을 기준으로 그 다음 안쪽의 사이드로 이동한다.
    (큰것을 이동시키는것은 결론적으로 그 이전값보다 무조건 작거나 같은 물용량이 나올 수 밖에 없기 때문)
 */
var maxArea = function(height) {
    let [left, right] = [0, height.length - 1];
    let maxWater = 0;
    
    while(left < right) {
        const [lh, rh] = [height[left], height[right]];
        const water = Math.min(lh, rh) * (right - left);
        
        maxWater = Math.max(water, maxWater);
        
        if (height[left] < height[right]) {
            left++;
        } else {
            right--;
        }
        
    }
    
    return maxWater;
};
